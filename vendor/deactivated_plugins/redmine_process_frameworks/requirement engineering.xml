<?xml version='1.0' encoding='UTF-8'?><process_model name='Requirement engineering'>&lt;p&gt; Recommended templates for requirement engineering &lt;/p&gt;
<activity name=' Project summary and acceptance '/><activity name=' Requirements verification '><action name=' Review the requirements document '/><action name=' Testing Requirements '/><action name=' Determine the qualified standard '/></activity><activity name=' Acquire the requirements '><action name=' Define requirements development process '>&lt;p&gt; Background: The steps of analyse requirements,acquire requirements，write requirement specification and validate requirements of your organization &lt;/p&gt;
&lt;p&gt; Task: Write the steps of analyse requirements, acquire requirements，write requirement specification and validate requirements of your organization into document &lt;/p&gt;
&lt;p&gt; Product: the requirements development process document &lt;/p&gt;
</action><action name=' Define project's vision or scope '/><action name=' Confirm use case '>&lt;p&gt; Background: Communicate with user representatives to understand the task they need to complete with the software (ie use case)&lt;/p&gt;
&lt;p&gt; Task: Complete use case document &lt;/p&gt;
&lt;p&gt; Product: use case document &lt;/p&gt;
</action><action name=' Confirm the user group '>&lt;p&gt; Background: Different users are different in many aspects, such as the frequency and functions when using products &lt;/p&gt;
&lt;p&gt; Task: Divide the product users into different groups, in order to avoid a situation where a user group's requirements being neglected &amp;nbsp;&lt;/p&gt;
&lt;p&gt; Product: Product users &lt;/p&gt;
</action><action name=' Select product champion r '>&lt;p&gt; Background: The product champion can provide a certain type of requirement for users, and make decisions on their behalf &lt;/p&gt;
&lt;p&gt; Task: Select at least one product champion for each type of users who can reflect their needs accurately &lt;/p&gt;
</action><action name=' Establish core team '>&lt;p&gt; Background: early versions of products or user representatives for similar products &lt;/p&gt;
&lt;p&gt; Task: to collect the products' functionality and quality characteristics opinions they are developing now &lt;/p&gt;
&lt;p&gt; Product:Views of typical users' focus group &lt;/p&gt;
</action><action name=' To hold a requirements acquiring seminar '/><action name=' Consummate requirements '>&lt;p&gt; Background: the issues raised by customers and the supplementary requirements &lt;/p&gt;
&lt;p&gt; Task: to point out what new features should be added to the new product or new version &lt;/p&gt;
&lt;p&gt; Product: requirements after consummating &lt;/p&gt;
</action></activity><activity name=' Requirements management '/><activity name=' Requirements analysis'><action name=' Drawing correlative diagram '>&lt;p&gt;
	Background: The correlative diagram shows how it adapt to the environment analysis model, it defines the boundaries and interfaces with the system and external entities &lt;/p&gt;
&lt;p&gt;
	Task : 1 To make clear the external entities &lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2. Make clear how to interact with external entities &lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3.Complete correlative diagram &lt;/p&gt;
&lt;p&gt;
	Product: system correlative diagram &lt;/p&gt;
</action><action name=' Analyse feasibility '>&lt;p&gt;
	Background: acquired requirements &lt;/p&gt;
&lt;p&gt;
	Task: conduct a feasibility analysis for each requirement according to the current allowable cost, performance, risk, technology and so on &lt;/p&gt;
&lt;p&gt;
	Product: feasibility analysis report &lt;/p&gt;
</action><action name=' Determine priority '>&lt;p&gt;
	Background: acquired requirements &lt;/p&gt;
&lt;p&gt;
	Task : Use analysis method to determine product function, use cases' relative priority, realize it by dividing it into different version numbers &lt;/p&gt;
&lt;p&gt;
	Product: response each use case's priority corresponding point in the use case document &lt;/p&gt;
</action><action name=' Requirements modeling '>&lt;p&gt;
	Background: acquired use case analysis&lt;/p&gt;
&lt;p&gt;
	Task: using UML(Unified Modeling Language) to establish model for acquired requiements, including class diagram, activity diagram, it can also include a data flow diagram, etc. &lt;/p&gt;
&lt;p&gt;
	Product: model document &lt;/p&gt;
</action><action name=' Create a data dictionary '>&lt;p&gt;
	Background: the data dictionary includes the definitions of all the data items and structure diagrams used in the system &lt;/p&gt;
&lt;p&gt;
	Task: define all the data items in the problem field according to the project requirements &lt;/p&gt;
&lt;p&gt;
	Product: data dictionary &lt;/p&gt;
</action><action name=' Allocate requirements to each subsystem '/><action name=' Application of quality function scheduling '/></activity><activity name=' Write requirement specification '><action name=' Formulate a SRS template '>&lt;p&gt; Background: the SRS template, which is Software Requirements Specifications；SRS template can be used well to form requirements a whole, providing a unified structure &lt;/p&gt;
&lt;p&gt; Task: Formulate SRS document according to the book or search online &lt;/p&gt;
&lt;p&gt; Product: SRS template &lt;/p&gt;
</action><action name=' Determine the source of requirements '>&lt;p&gt;
	Background: 1. acquired requirements &lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2. Requirement specification is not only provided to developer, but also provided to stakeholders, so identifying the source of requirements can guarantee the traceability of requirements &lt;/p&gt;
&lt;p&gt;
	Task: Determine the source of requirements &lt;/p&gt;
&lt;p&gt;
	Product: Identify the source of requirements in the SRS document &lt;/p&gt;
</action><action name=' Assign a unique label to each requirement '>&lt;p&gt;
	Background: the unique label can make requirements to be unified, and it is conducive to the increase, delete and modify of the requirements, ensuring the requirements can be tracked, the changes can be recorded &lt;/p&gt;
&lt;p&gt;
	Task: define a unique label for each requirement &lt;/p&gt;
&lt;p&gt;
	Product: the complete principle of label &lt;/p&gt;
</action><action name=' Record business rules '>&lt;p&gt;
	Background: business rules usually beyond the scope of specific projects, which leads to the implementation of their functional requirements &lt;/p&gt;
&lt;p&gt;
	Tasks: 1.sorting out the business rules &lt;/p&gt;
&lt;p&gt;
	&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2. Define the track chain of requirements and its corresponding business rules &lt;/p&gt;
&lt;p&gt;
	Product: business rules document &lt;/p&gt;
</action><action name=' Define quality attributes '>&lt;p&gt;
	Background: quality attributes, as the non-functional requirements, including performance, efficiency, reliability, etc. &lt;/p&gt;
&lt;p&gt;
	Task: define quality attributes for the system &lt;/p&gt;
&lt;p&gt;
	Product: reflect the quality attributes in the SRS document &lt;/p&gt;
</action></activity><activity name=' Start-up and preparation '><action name=' SVN self-training '>&lt;p&gt;1. Background: SVN is the basic tool to carry out the project, each member masters the basic skills through self-study.&lt;/p&gt;
&lt;p&gt;2.Task (1)Create a directory  (2)Create a file  (3)Change (4)Contrast change (5)Use statistics to view their own workload (6)As a project manager, set the log to prohibit the uploading of the directory or file &lt;/p&gt;
&lt;p&gt;3.Product (1) When this phase is completed, work out each person's workload and write them into documents, and then submit the documents into the repository.&lt;/p&gt;
</action></activity></process_model>
